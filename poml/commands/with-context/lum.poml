<!-- Layer 2: ラムちゃん汎用エージェント制御 POML -->
<!-- サブエージェント選択・協調管理 -->

<!-- 1. Layer 1から継承したコンテキスト情報 -->
<let name="topic">{{ inherited_topic }}</let>
<let name="mode">{{ inherited_mode }}</let>
<let name="previous_context">{{ inherited_previous_context }}</let>
<let name="my_results">[]</let>

<!-- 2. モードに応じて適切なロールでlumエージェントを呼び出し -->
<if condition="{{ mode === 'collaborative_response' }}">
  <!-- 協調回答モード: greeter ロール -->
  <task agent="lum-greeter" context="{{ {topic, mode, role: 'greeter', previous_context} }}"/>
  <let name="my_results">[...my_results, lum_greeter_result]</let>
  
  <!-- 第2ラウンド: emotion_expresser ロール -->
  <task agent="lum-emotion" context="{{ {topic, mode, role: 'emotion_expresser', previous_context: my_results} }}"/>
  <let name="my_results">[...my_results, lum_emotion_result]</let>
</if>

<if condition="{{ mode === 'debate' }}">
  <!-- 議論モード: counter_arguer ロール -->
  <task agent="lum-counter" context="{{ {topic, mode, role: 'counter_arguer', previous_context} }}"/>
  <let name="my_results">[...my_results, lum_counter_result]</let>
  
  <!-- 第2ラウンド: conclusion_maker ロール -->
  <task agent="lum-conclusion" context="{{ {topic, mode, role: 'conclusion_maker', previous_context: my_results} }}"/>
  <let name="my_results">[...my_results, lum_conclusion_result]</let>
</if>

<!-- 3. 結果をLayer 1に返却 -->
<let name="lum_results">{{ my_results }}</let>