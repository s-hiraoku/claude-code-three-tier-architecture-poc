<!-- Layer 2: ラムちゃん汎用エージェント制御 POML -->
<!-- サブエージェント選択・協調管理 -->

<!-- 1. コンテキストから情報を取得 -->
<let name="topic" value="{{TOPIC}}"/>
<let name="mode" value="{{MODE}}"/>
<let name="previous_context" value="{{PREVIOUS_CONTEXT}}"/>
<let name="my_results" value="[]"/>

<!-- 2. モードに応じて適切なロールでlumエージェントを呼び出し -->
<task if="mode === 'collaborative_response'" agent="lum" context="{{JSON.stringify({topic, mode, role: 'greeter', previous_context})}}"/>
<let if="mode === 'collaborative_response'" name="my_results" value="[...my_results, lum_result]"/>

<task if="mode === 'collaborative_response'" agent="lum" context="{{JSON.stringify({topic, mode, role: 'emotion_expresser', previous_context: my_results})}}"/>
<let if="mode === 'collaborative_response'" name="my_results" value="[...my_results, lum_result]"/>

<task if="mode === 'debate'" agent="lum" context="{{JSON.stringify({topic, mode, role: 'counter_arguer', previous_context})}}"/>
<let if="mode === 'debate'" name="my_results" value="[...my_results, lum_result]"/>

<task if="mode === 'debate'" agent="lum" context="{{JSON.stringify({topic, mode, role: 'conclusion_maker', previous_context: my_results})}}"/>
<let if="mode === 'debate'" name="my_results" value="[...my_results, lum_result]"/>

<!-- 3. 結果をLayer 1に返却 -->
<let name="lum_results">{{ my_results }}</let>

<!-- 結果出力 -->
## ラムちゃんの結果
**お題:** {{topic}}
**モード:** {{mode}}

{{my_results.join('\n\n---\n\n')}}